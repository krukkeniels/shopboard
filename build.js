const esbuild = require('esbuild');
const process = require('process');
const builtins = require('builtin-modules');

const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = process.argv[2] === 'production';
const watch = process.argv.includes('--watch');

const context = {
	banner: {
		js: banner,
	},
	entryPoints: ['src/main.ts'],
	bundle: true,
	external: [
		'obsidian',
		'electron',
		'@codemirror/autocomplete',
		'@codemirror/collab',
		'@codemirror/commands',
		'@codemirror/language',
		'@codemirror/lint',
		'@codemirror/search',
		'@codemirror/state',
		'@codemirror/view',
		'@lezer/common',
		'@lezer/highlight',
		'@lezer/lr',
		...builtins
	],
	format: 'cjs',
	target: 'es2018',
	logLevel: 'info',
	sourcemap: prod ? false : 'inline',
	treeShaking: true,
	outfile: 'main.js',
	minify: prod,
};

async function build() {
	if (watch) {
		const ctx = await esbuild.context(context);
		await ctx.watch();
		console.log('Watching for changes...');
	} else {
		await esbuild.build(context);
		console.log('Build complete');
	}
}

build().catch(() => process.exit(1));
